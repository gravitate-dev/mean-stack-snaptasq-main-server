server {
  #this is a rewrite to redirect people to snaptasq incase they use old url
  listen 80;
  server_name snaptasks.com sharetask.io;
  rewrite ^ https://www.snaptasq.com$request_uri? permanent;
}
#this is for my ssl
server {

listen   443;
ssl on;
ssl_certificate    /etc/ssl/www_snaptasq_com.chained.crt;
ssl_certificate_key    /etc/ssl/www_snaptasq_com.key;

  # enable session resumption to improve https performance
  # http://vincent.bernat.im/en/blog/2011-ssl-session-reuse-rfc5077.html
  ssl_session_cache shared:SSL:50m;
  ssl_session_timeout 5m;
ssl_prefer_server_ciphers on;
ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
add_header Strict-Transport-Security "max-age=31536000;";
ssl_ciphers "ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4";
ssl_dhparam /etc/nginx/cert/dhparam.pem;

server_name snaptasq.com;
    location / {
        #proxy_set_header X-Prerender-Token YOUR_TOKEN;

        set $prerender 0;
        #baiduspider|twitterbot|facebookexternalhit|rogerbot|linkedinbot|embedly|quora link preview|showyoubot|outbrain|pinterest|slackbot|vkShare|W3C_Validator|googlebot
        if ($http_user_agent ~* "facebookexternalhit|twitterbot|googlebot") {
            set $prerender 1;
        }
        if ($args ~ "_escaped_fragment_|prerender=1") {
            set $prerender 1;
        }
        if ($http_user_agent ~ "Prerender") {
            set $prerender 0;
        }
        if ($prerender = 1) {
	    proxy_pass http://fb.snaptasq.com;
            #rewrite .* /$scheme://$host$request_uri? break;
            #proxy_pass http://localhost:3000;
            #proxy_pass http://service.prerender.io;
        }
		#proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_connect_timeout 150;
                proxy_send_timeout 100;
                proxy_read_timeout 100;
                proxy_buffers 4 32k;
                client_max_body_size 8m;
                client_body_buffer_size 128k;
                proxy_intercept_errors on;

        if ($prerender = 0) {
                #proxy_set_header Host $host;
                #proxy_set_header X-Real-IP $remote_addr;
                #proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                #proxy_connect_timeout 150;
                #proxy_send_timeout 100;
                #proxy_read_timeout 100;
                #proxy_buffers 4 32k;
                #client_max_body_size 8m;
                #client_body_buffer_size 128k;
		#proxy_intercept_errors on;
                proxy_pass http://localhost:9000;
        }
	}
recursive_error_pages on;
        error_page 404 500 501 502 503 /maintenance.html;
        location = /maintenance.html {
                root /home/ubuntu/snaptasq/nginxRoot/;
                internal;
        }
}

server {
       listen         80;
       server_name    snaptasq.com;
       return         301 https://$server_name$request_uri;
}

server {
        listen 80;
        server_name dev.snaptasq.com; #dev.sharetask.io;

        location / {
                proxy_pass http://localhost:8000;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_connect_timeout 150;
                proxy_send_timeout 100;
                proxy_read_timeout 100;
                proxy_buffers 4 32k;
                client_max_body_size 8m;
                client_body_buffer_size 128k;
        }
}


server {
        listen 80;
        server_name mongo.snaptasq.com; #dev.sharetask.io;

        location / {
                proxy_pass http://localhost:8081;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_connect_timeout 150;
                proxy_send_timeout 100;
                proxy_read_timeout 100;
                proxy_buffers 4 32k;
                client_max_body_size 8m;
                client_body_buffer_size 128k;
        }
}


server {
       listen 80;
       server_name debug.snaptasq.com; #debug.sharetask.io;
       location / {

       proxy_pass http://localhost:8080/debug?ws=127.0.0.1:8080&port=5858;
       proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_connect_timeout 150;
                proxy_send_timeout 100;
                proxy_read_timeout 100;
                proxy_buffers 4 32k;
                client_max_body_size 8m;
                client_body_buffer_size 128k;

    satisfy any;

    allow 24.130.118.54;
    deny  all;

    auth_basic           "closed site";
    auth_basic_user_file conf/htpasswd;
   }
}

server {
        listen 80;
        server_name blog.snaptasq.com;
	location /pset7 {
	    autoindex on;
	}
	index index.php;
	location ~ \.php$ {
        	try_files $uri =404;
	        fastcgi_split_path_info ^(.+\.php)(/.+)$;
	        fastcgi_pass unix:/var/run/php5-fpm.sock;
	        fastcgi_index index.php;
	        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
	        include fastcgi_params;
    	}
	root /var/www/blog;
	location / {
        # URLs to attempt, including pretty ones.
        try_files   $uri $uri/ /index.php?$query_string;
    	}
}

server {
        listen 80;
        server_name fb.snaptasq.com;
        location /pset7 {
            autoindex on;
        }
        index index.php;
        location ~ \.php$ {
                try_files $uri $uri/ =404;
                fastcgi_split_path_info ^(.+\.php)(/.+)$;
                fastcgi_pass unix:/var/run/php5-fpm.sock;
                fastcgi_index index.php;
                fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
                include fastcgi_params;
        }
        root /var/www/crawler-seo;
        #location / {
        # URLs to attempt, including pretty ones.
        #try_files   $uri $uri/ /index.php?$query_string;
        #}
}
